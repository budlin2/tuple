{"version":3,"file":"DropZoneSides.4db44d78.js","sources":["../../src/components/Dropzone/DropZoneTypes.ts","../../src/components/Dropzone/Sides/DropZoneSides.tsx"],"sourcesContent":["export enum DropSideT {\n    TOP     = \"TOP\",\n    RIGHT   = \"RIGHT\",\n    BOTTOM  = \"BOTTOM\",\n    LEFT    = \"LEFT\",\n}\n","import {\n    CSSProperties,\n    DragEvent,\n    ReactElement,\n    useState,\n} from 'react';\n\nimport { DropSideT } from '../DropZoneTypes';\n\nimport _classes from './sides.dropzone.module.css';\n\n\nexport interface Props {\n    onDragOverCB?       : ((e: DragEvent<Element>, side: DropSideT) => void) | null,\n    onDragLeaveCB?      : ((e: DragEvent<Element>, side: DropSideT) => void) | null,\n    onDropCB?           : ((e: DragEvent<Element>, side: DropSideT) => void) | null,\n    validateDraggable?  : ((e: DragEvent<Element>) => boolean) | null,\n    dropZoneActive?     : boolean | null,  // parent component may want to control when dropzone is active\n    className?          : string | null,\n    style?              : CSSProperties | null,\n    children?           : ReactElement,\n}\n\n\nconst DropZoneSides = ({\n    onDragOverCB=null,\n    onDragLeaveCB=null,\n    onDropCB=null,\n    validateDraggable=null,\n    dropZoneActive=true,  // default behavior is to always have dropzone available. Parent may override this\n    className=null,\n    style=null,\n    children,\n}: Props) => {\n    const [topVisible       , setTopVisible]        = useState(false);\n    const [bottomVisible    , setBottomVisible]     = useState(false);\n    const [leftVisible      , setLeftVisible]       = useState(false);\n    const [rightVisible     , setRightVisible]      = useState(false);\n\n    const withCustomClass = (_className: string) => `${_className} ${className}`;\n\n    // DropZone Event Handlers\n    const onDragOverHandler = (e: DragEvent<Element>, side: DropSideT) => {\n        // e.stopPropagation();\n        e.preventDefault();\n    \n        switch (side) {\n            case DropSideT.TOP      : setTopVisible(true);      break;\n            case DropSideT.RIGHT    : setRightVisible(true);    break;\n            case DropSideT.BOTTOM   : setBottomVisible(true);   break;\n            case DropSideT.LEFT     : setLeftVisible(true);     break;\n            default:\n                throw Error(\"Invalid side!\");\n        }\n\n        onDragOverCB && onDragOverCB(e, side);\n    };\n\n    const onDragLeaveHandler = (e: DragEvent<Element>, side: DropSideT) => {\n        switch (side) {\n            case DropSideT.TOP      :   setTopVisible(false);       break;\n            case DropSideT.RIGHT    :   setRightVisible(false);     break;\n            case DropSideT.BOTTOM   :   setBottomVisible(false);    break;\n            case DropSideT.LEFT     :   setLeftVisible(false);      break;\n            default:\n                throw Error(\"Invalid side!\");\n        }\n\n        onDragLeaveCB && onDragLeaveCB(e, side);\n    };\n\n    const onDropHandler = (e: DragEvent<Element>, side: DropSideT) => {\n        switch (side) {\n            case DropSideT.TOP      :   setTopVisible(false);       break;\n            case DropSideT.BOTTOM   :   setBottomVisible(false);    break;\n            case DropSideT.RIGHT    :   setRightVisible(false);     break;\n            case DropSideT.LEFT     :   setLeftVisible(false);      break;\n            default:\n                throw Error(\"Bad paramater!\");\n        }\n\n        if (validateDraggable && !validateDraggable(e))\n            return;\n\n        onDropCB && onDropCB(e, side);\n    };\n\n    return (\n        <div className={_classes.root}>\n            {/* ACTUAL DROP ZONE */}\n            { dropZoneActive && (\n                <div className={_classes.dropZoneTop}\n                    style       = { style }\n                    onDragOver  = { e => onDragOverHandler(e, DropSideT.TOP) }\n                    onDragLeave = { e => onDragLeaveHandler(e, DropSideT.TOP) }\n                    onDrop      = { e => onDropHandler(e, DropSideT.TOP) } />\n            )}\n\n            { dropZoneActive && (\n                <div className={_classes.dropZoneRight}\n                    style       = { style }\n                    onDragOver  = { e => onDragOverHandler(e, DropSideT.RIGHT) }\n                    onDragLeave = { e => onDragLeaveHandler(e, DropSideT.RIGHT) }\n                    onDrop      = { e => onDropHandler(e, DropSideT.RIGHT) } />\n            )}\n\n            { dropZoneActive && (\n                <div className={_classes.dropZoneBottom}\n                    style       = { style }\n                    onDragOver  = { e => onDragOverHandler(e, DropSideT.BOTTOM) }\n                    onDragLeave = { e => onDragLeaveHandler(e, DropSideT.BOTTOM) }\n                    onDrop      = { e => onDropHandler(e, DropSideT.BOTTOM) } />\n            )}\n\n            { dropZoneActive && (\n                <div className={_classes.dropZoneLeft}\n                    style       = { style }\n                    onDragOver  = { e => onDragOverHandler(e, DropSideT.LEFT) }\n                    onDragLeave = { e => onDragLeaveHandler(e, DropSideT.LEFT) }\n                    onDrop      = { e => onDropHandler(e, DropSideT.LEFT) } />\n            )}\n\n            {/* DROP ZONE DISPLAYED TO USER */}\n            { topVisible    && <div className={withCustomClass(_classes.dropZoneDisplayTop)}    style={style || {}} /> }\n            { rightVisible  && <div className={withCustomClass(_classes.dropZoneDisplayRight)}  style={style || {}} /> }\n            { bottomVisible && <div className={withCustomClass(_classes.dropZoneDisplayBottom)} style={style || {}} /> }\n            { leftVisible   && <div className={withCustomClass(_classes.dropZoneDisplayLeft)}   style={style || {}} /> }\n\n            { children }\n        </div>\n    );\n}\n\n\nexport default DropZoneSides;"],"names":["DropSideT","DropZoneSides","onDragOverCB","onDragLeaveCB","onDropCB","validateDraggable","dropZoneActive","className","style","children","topVisible","setTopVisible","useState","bottomVisible","setBottomVisible","leftVisible","setLeftVisible","rightVisible","setRightVisible","withCustomClass","_className","onDragOverHandler","side","e","onDragLeaveHandler","onDropHandler","_jsxs","_classes","root","dropZoneTop","_jsx","dropZoneRight","dropZoneBottom","dropZoneLeft","DropZoneSides$1"],"mappings":"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"}