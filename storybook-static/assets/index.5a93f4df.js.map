{"version":3,"file":"index.5a93f4df.js","sources":["../../src/components/SplitPane/index.tsx"],"sourcesContent":["import {\n    useState,\n    useRef,\n    MouseEvent,\n    ReactNode,\n    CSSProperties,\n    Children,\n    useEffect,\n    MutableRefObject,\n} from 'react'\n\nimport _classes from './splitpane.module.css';\nimport {DirectionT} from '../../types';\n\n\ninterface Props {\n    dir?: DirectionT,\n    width?: number | string,\n    height?: number | string,\n    resizerPos?: number | string,\n    resizable?: boolean,\n    children: ReactNode,\n    onResize?: ((e: MouseEvent) => null) | null,\n}\n\n\nconst SplitPane = ({\n    dir='horizontal',\n    width='100%',\n    height='100%',\n    resizerPos='50%',\n    resizable=true,\n    children,\n    onResize=null,\n}: Props) => {\n    const childrenArr = Children.toArray(children);\n    if (childrenArr.length > 2) throw 'SplitPane can only take a maximum of two children';\n    if (childrenArr.length < 1) throw 'SplitPane needs at least one child';\n\n    const containerRef = useRef<HTMLDivElement>();\n    const headRef = useRef<HTMLDivElement>();\n    const resizerRef = useRef<HTMLDivElement>();\n    const tailRef = useRef<HTMLDivElement>();\n\n    const [resizing, setResizing] = useState<boolean>(false);\n    const [headLength, setHeadLength] = useState<number | string>(resizerPos);\n    const [mousePos, setMousePos] = useState<number>(0);\n\n    useEffect(() => {\n        // After first render, make sure headLength is number\n        const headLen = dir === 'horizontal'\n            ? headRef.current?.offsetWidth as number\n            : headRef.current?.offsetHeight as number;\n        setHeadLength(headLen);\n    }, [resizerPos, headRef, setHeadLength]);\n\n    const mouseDownHandler = (e: MouseEvent) => {\n        if (dir === 'horizontal') {\n            setResizing(true);\n            setMousePos(e.clientX);\n            setHeadLength(headRef.current?.offsetWidth as number);\n        } else if (dir === 'vertical') {\n            setResizing(true);\n            setMousePos(e.clientY);\n            setHeadLength(headRef.current?.offsetHeight as number);\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    const mouseMoveHandler = (e: MouseEvent): void => {\n        if (!resizing) return;\n\n        const container = containerRef.current as HTMLDivElement;\n        const head = headRef.current as HTMLDivElement;\n\n        if (dir === 'horizontal') {\n            const deltaX = e.clientX - mousePos;\n            const offsetWidth = containerRef.current?.offsetWidth as number;\n            const newHeadLength = (((headLength as number) + deltaX) * 100) / offsetWidth;\n            container.style.cursor = 'w-resize';\n            head.style.width = `${newHeadLength}%`;\n        } else if (dir === 'vertical') {\n            const deltaY = e.clientY - mousePos;\n            const offsetHeight = containerRef.current?.offsetHeight as number;\n            const newHeadLength = (((headLength as number) + deltaY) * 100) / offsetHeight;\n            container.style.cursor = 'n-resize';\n            head.style.height = `${newHeadLength}%`;\n        }\n\n        onResize && onResize(e);\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    const mouseUpHandler = (e: MouseEvent) => {\n        setResizing(false);\n        const container = containerRef.current as HTMLDivElement;\n        container.style.cursor = 'default';\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    const containerStyle: CSSProperties = { width, height };\n    let headStyle: CSSProperties = {};\n\n    let containerClassName: string = _classes.container;\n    const headClassName: string = `${_classes.noScrollbar} ${_classes.pane} ${_classes.paneHead}`;\n    let resizerClassName: string = _classes.resizer;\n    const tailClassName: string = `${_classes.noScrollbar} ${_classes.pane} ${_classes.paneTail}`;\n\n    switch(dir) {\n        case 'horizontal':\n            headStyle = { ...headStyle, width: headLength };\n            resizerClassName = `${resizerClassName} ${_classes.resizerHorizontal}`;\n            break;\n        case 'vertical':\n            containerClassName = `${_classes.container} ${_classes.containerVertical}`;\n            headStyle = { ...headStyle, height: headLength };\n            resizerClassName = `${resizerClassName} ${_classes.resizerVertical}`;\n            break;\n        case 'none':\n        default:\n            if (childrenArr.length != 1)\n                throw 'Only one child allowed unless dir paramater is set to \"horizontal\" or \"vertical\"';\n    }\n\n    return (\n        <div ref={containerRef as MutableRefObject<HTMLDivElement>}\n            style={containerStyle}\n            className={containerClassName}\n            onMouseMove={mouseMoveHandler}\n            onMouseUp={mouseUpHandler}\n            onMouseLeave={mouseUpHandler}\n        >\n            <div ref={headRef as MutableRefObject<HTMLDivElement>}\n                className={headClassName}\n                style={headStyle}\n            >\n                { childrenArr && childrenArr[0] }\n                { resizable &&\n                    <div ref={ resizerRef as MutableRefObject<HTMLDivElement> }\n                        className={resizerClassName}\n                        onMouseDown={mouseDownHandler}/>\n                }\n            </div>\n            <div ref={ tailRef  as MutableRefObject<HTMLDivElement> }\n                className={tailClassName}\n            >\n                { dir !== 'none' && childrenArr && childrenArr[1] }\n            </div>\n        </div>\n    );\n}\n\n\nexport default SplitPane;"],"names":["children","Children","useRef","useState","useEffect","setHeadLength","setResizing","setMousePos","e","container","head","newHeadLength","onResize","width","height","dir","headStyle","headLength","resizerClassName","containerClassName","_jsxs","containerRef","containerStyle","mouseMoveHandler","mouseUpHandler","headRef","headClassName","resizerRef","mouseDownHandler","_jsx","tailRef","tailClassName"],"mappings":"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"}