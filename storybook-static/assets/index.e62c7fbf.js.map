{"version":3,"file":"index.e62c7fbf.js","sources":["../../src/components/SplitPane/index.tsx"],"sourcesContent":["import {\n    useState,\n    useRef,\n    MouseEvent,\n    ReactNode,\n    CSSProperties,\n    Children,\n    useEffect,\n    MutableRefObject,\n} from 'react'\n\nimport _classes from './splitpane.module.css';\nimport _global_classes from '../styles.module.css';\nimport { DirectionT } from './SplitPaneTypes';\n\n\nconst validateSplitPane = (direction: DirectionT, children: Array<ReactNode>) => {\n    if (children.length > 2)\n        throw new Error('SplitPane can only take a maximum of two children');\n\n    if (children.length < 1)\n        throw new Error('SplitPane needs at least one child');\n\n    if (direction == 'none' && children.length !== 1)\n        console.warn('Views with diection \"none\" should have one and only one child.');\n    \n    if ((direction == 'horizontal' || direction == 'vertical') && children.length !== 2)\n        throw new Error(`\"${direction}\" views require two children`);\n};\n\n\nexport interface Props {\n    dir?: DirectionT,\n    width?: number | string,\n    height?: number | string,\n    resizerPos?: number | string,\n    resizable?: boolean,\n    paneStyle?: CSSProperties\n    paneClassName?: string,\n    children: ReactNode,\n    onResize?: ((e: MouseEvent) => null) | null,\n}\n\n\nconst SplitPane = ({\n    dir='horizontal',\n    width='100%',\n    height='100%',\n    resizerPos='50%',\n    resizable=true,\n    paneStyle={},\n    paneClassName='',\n    children,\n    onResize=null,\n}: Props) => {\n    const childrenArr = Children.toArray(children);\n    validateSplitPane(dir, childrenArr);\n\n    const containerRef = useRef<HTMLDivElement>();\n    const headRef = useRef<HTMLDivElement>();\n    const resizerRef = useRef<HTMLDivElement>();\n    const tailRef = useRef<HTMLDivElement>();\n\n    const [resizing, setResizing] = useState<boolean>(false);\n    const [headLength, setHeadLength] = useState<number | string>(resizerPos);\n    const [mousePos, setMousePos] = useState<number>(0);\n\n    // After first render, make sure headLength is number\n    useEffect(() => {\n        const headLen: number = (dir === 'horizontal')\n            ? headRef.current?.offsetWidth\n            : headRef.current?.offsetHeight;\n        setHeadLength(headLen);\n    }, [resizerPos, headRef, setHeadLength]);\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Event Handlers\n    //------------------------------------------------------------------------------------------------------------------\n    const mouseDownHandler = (e: MouseEvent) => {\n        if (dir === 'horizontal') {\n            setResizing(true);\n            setMousePos(e.clientX);\n            setHeadLength(headRef.current?.offsetWidth);\n        } else if (dir === 'vertical') {\n            setResizing(true);\n            setMousePos(e.clientY);\n            setHeadLength(headRef.current?.offsetHeight as number);\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    const mouseMoveHandler = (e: MouseEvent): void => {\n        if (!resizing) return;\n\n        const container = containerRef.current as HTMLDivElement;\n        const head = headRef.current as HTMLDivElement;\n\n        if (dir === 'horizontal') {\n            const deltaX = e.clientX - mousePos;\n            const offsetWidth = containerRef.current?.offsetWidth as number;\n            const newHeadLength = (((headLength as number) + deltaX) * 100) / offsetWidth;\n\n            container.style.cursor = 'w-resize';\n            head.style.width = `${newHeadLength}%`;\n\n        } else if (dir === 'vertical') {\n            const deltaY = e.clientY - mousePos;\n            const offsetHeight = containerRef.current?.offsetHeight as number;\n            const newHeadLength = (((headLength as number) + deltaY) * 100) / offsetHeight;\n\n            container.style.cursor = 'n-resize';\n            head.style.height = `${newHeadLength}%`;\n        }\n\n        onResize && onResize(e);\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    const mouseUpHandler = (e: MouseEvent) => {\n        setResizing(false);\n        const container = containerRef.current as HTMLDivElement;\n        container.style.cursor = 'default';\n\n        e.stopPropagation();\n        e.preventDefault();\n    };\n\n    //------------------------------------------------------------------------------------------------------------------\n    // Styling\n    //------------------------------------------------------------------------------------------------------------------\n    let containerClassName  = _classes.container;\n    let resizerClassName    = _classes.resizer;\n\n    const headClassName= `\n        ${_global_classes.noScrollbar}\n        ${_classes.pane}\n        ${_classes.paneHead}\n        ${paneClassName}`;\n\n    const tailClassName = `\n        ${_global_classes.noScrollbar}\n        ${_classes.pane}\n        ${_classes.paneTail}\n        ${paneClassName}`;\n\n    const containerStyle: CSSProperties = { width, height };\n    const tailStyle: CSSProperties      = paneStyle;\n    let headStyle: CSSProperties        = paneStyle;\n\n    switch(dir) {\n        case 'horizontal':\n            headStyle           = { ...headStyle, width: headLength };\n            resizerClassName    = `${resizerClassName} ${_classes.resizerHorizontal}`;\n            break;\n        case 'vertical':\n            containerClassName  = `${_classes.container} ${_classes.containerVertical}`;\n            headStyle           = { ...headStyle, height: headLength };\n            resizerClassName    = `${resizerClassName} ${_classes.resizerVertical}`;\n            break;\n        case 'none':\n        default:\n            if (childrenArr.length != 1)\n                throw 'Only one child allowed unless dir paramater is set to \"horizontal\" or \"vertical\"';\n    }\n\n    return (\n        <div ref={containerRef as MutableRefObject<HTMLDivElement>}\n            style={containerStyle}\n            className={containerClassName}\n            onMouseMove={mouseMoveHandler}\n            onMouseUp={mouseUpHandler}\n            onMouseLeave={mouseUpHandler}>\n\n            <div className={headClassName} style={headStyle}\n                ref={headRef as MutableRefObject<HTMLDivElement>}>\n\n                { childrenArr && childrenArr[0] }\n                { resizable &&\n                    <div ref={ resizerRef as MutableRefObject<HTMLDivElement> }\n                        className={resizerClassName}\n                        onMouseDown={mouseDownHandler}/>\n                }\n\n            </div>\n            <div className={tailClassName} style={tailStyle}\n                ref={tailRef as MutableRefObject<HTMLDivElement>}>\n\n                { dir !== 'none' && childrenArr && childrenArr[1] }\n\n            </div>\n        </div>\n    );\n}\n\n\nexport default SplitPane;"],"names":["validateSplitPane","direction","children","console","SplitPane","dir","width","height","resizerPos","resizable","paneStyle","paneClassName","childrenArr","Children","containerRef","useRef","headRef","resizerRef","tailRef","resizing","setResizing","useState","headLength","setHeadLength","mousePos","setMousePos","useEffect","headLen","_a","_b","mouseDownHandler","e","mouseMoveHandler","container","head","deltaX","offsetWidth","newHeadLength","deltaY","offsetHeight","onResize","mouseUpHandler","containerClassName","_classes","resizerClassName","headClassName","_global_classes","noScrollbar","pane","paneHead","tailClassName","paneTail","containerStyle","tailStyle","headStyle","_jsxs","_jsx","SplitPane$1"],"mappings":"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"}